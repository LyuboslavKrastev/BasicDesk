@model MergingTableRequestViewModel
@using X.PagedList.Mvc.Core;
@using X.PagedList.Mvc.Common;
<div class="modal-dialog modal-dialog-centered modal-lg" id="callerSearchModal" role="document">
    <div class="modal-content" style="overflow:inherit">
        <div class="modal-body modal-wide" id="tableModalDiv">

            <table class="table table-hover table-striped table-bordered">
                <thead>
                <th>
                    Id
                </th>
                <th>
                    Subject
                </th>
                <th>
                    Requester Name
                </th>
                <th>
                    Assigned To
                </th>
                <th>
                    Created Date
                </th>
                <th>
                    Closed On
                </th>
                <th>
                    Status
                </th>
                <th>
                    @{
                        var requestId = Model.Id;
                    }
                    @Html.PagedListPager(Model.Requests, page => Url.Action("GetMergeTable", "Partials", new { requestId, page }),
                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "callerSearchModal" }))

                </th>
                </thead>
                <tbody>

                    @foreach (var item in Model.Requests)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                <a asp-area="" asp-controller="Requests" asp-action="Details" asp-route-id="@item.Id">@item.Subject</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Requester)
                            </td>
                            <td>
                                @if (item.AssignedTo != null)
                                {
                                    <a class="text-success"><strong>@item.AssignedTo</strong></a>
                                }
                                else
                                {
                                    <label class="text-danger">Unassigned</label>
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.StartTime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Endtime)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>
                            <td>
                                <form asp-area="" asp-controller="requests" asp-action="merge" method="post">
                                    <input hidden name="ids" value="@Model.Id" />
                                    <input hidden name="ids" value="@item.Id" />

                                    <button type="submit" class="btn btn-success btn-block">merge</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


