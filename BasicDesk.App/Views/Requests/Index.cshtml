@model RequestSortingViewModel
@using X.PagedList.Mvc.Core;

@{
    ViewData["Title"] = "Requests";
}

<h3 class="text-center">Requests</h3>
<div class="container-fluid body-content">
    <div>
        <!-- Note Modal -->
        <div class="modal fade" id="noteModal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title text-center">Add Note</h3>
                    </div>
                    <div class="modal-body">
                        <textarea id="noteDescription" class="form-control" rows="4" style="min-width: 100%; resize:none;"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" id="noteBtn">Add Note</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Approval Modal -->
        <div class="modal fade" id="approvalModal" tabindex="-1" role="dialog">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="modal-title text-center">Submit for Approval</h3>
                    </div>
                    <div class="modal-body">
                        <p>Request ID - Model.Id</p>
                        <label>To</label>
                        <select class="form-control">
                            <option>Pesho</option>
                            <option>Gosho</option>
                            <option>RandomPich</option>
                            <option>4</option>
                            <option>5</option>
                        </select>
                        <br>
                        <label>Subject</label>
                        <input class="form-control" name="subject" id="subject">
                        <br>
                        <label>Description</label>
                        <textarea class="form-control" rows="4" style="min-width: 100%; resize:none;"></textarea>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success">Send</button>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>
                    <div>
                        <form asp-area="" asp-controller="Requests" asp-action="Index" method="get" class="form-inline" style="display:inline;">
                            <label for="staticEmail">Showing</label>
                            <select name='currentFilter' onchange='this.form.submit()' class="form-control">
                                <option value="">All Requests</option>
                                @{
                                    foreach (var status in Model.Statuses)
                                    {
                                        if (Model.CurrentFilter == status.Value)
                                        {
                                            <option selected="selected" value="@status.Value">@status.Text</option>
                                        }
                                        else
                                        {
                                            <option value="@status.Value">@status.Text</option>
                                        }

                                    }
                                }
                            </select>
                        </form>
                    </div>
                </th>
                <th class="col-md-1"><a asp-area="" asp-controller="Requests" asp-action="Create" class="btn btn-success" style="width: 100%;">New Request <i class=glyphicon-plus></i></a></th>
                <th class="col-md-1"><a class="btn btn-info" data-toggle="modal" style="width: 100%;" data-target="#approvalModal">Submit for Approval</a></th>
                <th class="col-md-1"><a class="btn btn-info" style="width: 100%;" data-toggle="modal" data-target="#noteModal">Add Note</a></th>
                <th class="col-md-1"><a class="btn btn-info" style="width: 100%;" id="mergeReq">Merge</a></th>
                <th class="col-md-1"><a class="btn btn-danger" style="width: 100%;" id="deleteReq">Delete</a></th>

                <th>
                    <form method="get" class="form-inline">
                        <div class="form-group">
                            <label for="myfield">Show</label>
                            @{
                                if (Model.CurrentFilter != null)
                                {
                                    <input style="display:none" name="currentFilter" value="@Model.CurrentFilter" />
                                }
                                if (Model.CurrentSearch != null)
                                {
                                    <input style="display:none" name="searchString" value="@Model.CurrentSearch" />
                                }
                                if (Model.CurrentSort != null)
                                {
                                    <input style="display:none" name="sortOrder" value="@Model.CurrentSort" />
                                }
                            }

                            <select name="requestsPerPage" onchange='this.form.submit()' class="form-control">

                                @foreach (var option in Model.ReqPerPageList)
                                {
                                    if (Model.RequestsPerPage == int.Parse(option.Value))
                                    {
                                        <option selected="selected" value="@option.Value">@option.Text</option>
                                    }
                                    else
                                    {
                                        <option value="@option.Value">@option.Text</option>
                                    }
                                }
                            </select>
                            <label for="myfield">per page</label>
                        </div>
                    </form>
                </th>
            </tr>
    </table>

    <table class="table table-hover table-striped table-bordered">
        <thead>
        <th><input type="checkbox" class="checkbox-inline" id="checkAll"></th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.IdSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                Id
                <!-- @Html.DisplayNameFor(model => model.Requests[0].Id) -->
            </a>
        </th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.SubjectSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                Subject
                <!-- @Html.DisplayNameFor(model => model.Requests[0].Subject) -->
            </a>
        </th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                Requester Name
                <!-- @Html.DisplayNameFor(model => model.Requests[0].Requester) -->
            </a>
        </th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.AssignedToSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                Assigned To
                <!-- @Html.DisplayNameFor(model => model.Requests[0].AssignedTo) -->
            </a>
        </th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.StartDateSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                Created Date
                <!-- @Html.DisplayNameFor(model => model.Requests[0].StartTime) -->
            </a>
        </th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.EndDateSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                Closed On
                <!-- @Html.DisplayNameFor(model => model.Requests[0].Endtime) -->
            </a>
        </th>
        <th>
            <a asp-area="" asp-controller="Requests" asp-action="Index" asp-route-sortOrder="@Model.StatusSort" asp-route-currentFilter="@Model.CurrentFilter" asp-route-searchString="@Model.CurrentSearch">
                <!-- @Html.DisplayNameFor(model => model.Requests[0].Status) -->
                Status

            </a>
            <a id="searchIcon"><i class="glyphicon glyphicon-zoom-in pull-right"></i></a>
        </th>


        <tbody>
            <tr id="searchBar" style="display: none">
                <td></td>
                <td form id="searchForm" asp-controller="Requests" asp-action="Index" method="get" class="input-group">
                    <input class="text-right " type="text" placeholder="Id" name="SearchString" value="@Model.CurrentSearch" />
                </td>
                <td>
                    <input form="searchForm" class="text-right " type="text" placeholder="Subject" name="SearchString" value="@Model.CurrentSearch" />
                </td>
                <td>
                    <input form="searchForm" class="text-right " type="text" placeholder="Requester Name" name="SearchString" value="@Model.CurrentSearch" />
                </td>
                <td>
                    <input form="searchForm" class="text-right " type="text" placeholder="Assigned To" name="SearchString" value="@Model.CurrentSearch" />
                </td>
                <td>
                    <input form="searchForm" class="text-right " type="text" placeholder="Created Date" name="SearchString" value="@Model.CurrentSearch" />
                </td>
                <td>
                    <input form="searchForm" class="text-right " type="text" placeholder="Closed On" name="SearchString" value="@Model.CurrentSearch" />

                </td>
                <td>
                    <input form="searchForm" class="text-right " type="text" placeholder="Status" name="SearchString" value="@Model.CurrentSearch" />
                    <button form="serachForm" class="btn btn-default">Go</button>
                </td>
            </tr>

            @foreach (var item in Model.Requests)
            {
                <tr>
                    <td><input value="@item.Id" type="checkbox" class="check"></td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        <a asp-area="" asp-controller="Requests" asp-action="Details" asp-route-id="@item.Id">@item.Subject</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Requester)
                    </td>
                    <td>
                        @if (item.AssignedTo != null)
                        {
                            <a class="text-success"><strong>@item.AssignedTo</strong></a>
                        }
                        else
                        {
                            <label class="text-danger">Unassigned</label>
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Endtime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status)
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div style="display:inline">
        <label for="timer">
            <h3>
                Seconds until page reloads: <span class="text-danger" id="timer">
                </span>
            </h3>
        </label>
    </div>
</div>

<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/js/requests/index/checkbox-manager.js"></script>
<script src="~/js/requests/index/searchbar.js"></script>
<script src="~/js/requests/index/page-refresh.js"></script>
<script src="~/js/requests/index/notes.js"></script>
<script src="~/js/requests/index/delete.js"></script>
<script src="~/js/requests/index/merge.js"></script>

@{
    var sortOrder = Model.CurrentSort;
    var searchString = Model.CurrentSearch;
    var currentFilter = Model.CurrentFilter;
    var requestsPerPage = Model.RequestsPerPage;
}

@Html.PagedListPager(Model.Requests, page => Url.Action("Index", "Requests", new { sortOrder, searchString, currentFilter, page, requestsPerPage }))